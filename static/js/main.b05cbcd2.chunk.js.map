{"version":3,"sources":["components/AddContact/AddContact.module.css","components/OneContact/OneContact.module.css","components/FilterContacts/FilterConatcts.module.css","redux/actions/itemsAction.js","redux/constants/constants.js","components/AddContact/AddContact.js","components/OneContact/OneContact.js","components/AllContacts/AllContacts.js","redux/actions/filterAction.js","components/FilterContacts/FilterContacts.js","components/Alert/Alert.js","App.js","redux/reducers/itemsReducers.js","redux/reducers/filterReducers.js","redux/reducers/mainReducers.js","redux/store.js","index.js"],"names":["module","exports","userAdd","createAction","userDelete","Phonebook","setShowAlert","useState","name","setName","number","setNumber","contacts","useSelector","state","items","dispatch","useDispatch","className","styles","form","autoComplete","onSubmit","e","preventDefault","find","contact","status","text","setTimeout","length","id","uuidv4","localStorage","setItem","JSON","stringify","inputName","type","placeholder","value","onChange","target","inputNumber","buttonAddContacts","OneContact","listItem","contactName","contactNumber","deleteButton","onClick","newArr","parse","getItem","filter","item","handleUserDelete","AllContacts","inputFilter","filterContacts","toLowerCase","includes","TransitionGroup","component","map","CSSTransition","timeout","classNames","filterEdit","FilterContacts","wrapper","Alert","showAlert","App","useEffect","user","in","appear","AddContact","mountOnEnter","unmountOnExit","createReducer","action","payload","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b05cbcd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContact_form__3LihY\",\"inputName\":\"AddContact_inputName__1g7mk\",\"inputNumber\":\"AddContact_inputNumber__prj0O\",\"buttonAddContacts\":\"AddContact_buttonAddContacts__2HOBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"OneContact_listItem__3WRes\",\"contactName\":\"OneContact_contactName__1j8Pa\",\"contactNumber\":\"OneContact_contactNumber__fjnqj\",\"deleteButton\":\"OneContact_deleteButton__1ytGF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FilterConatcts_wrapper__3ddYs\",\"inputName\":\"FilterConatcts_inputName__2iy4K\",\"filter\":\"FilterConatcts_filter__2gUX7\"};","import { ADD_USER, DELETE_USER } from \"../constants/constants\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const userAdd = createAction(ADD_USER);\r\nexport const userDelete = createAction(DELETE_USER);\r\n\r\n// export const userAdd = (value) => ({\r\n//   type: ADD_USER,\r\n//   payload: valuse,\r\n// });\r\n// export const userDelete = (id) => ({\r\n//   type: DELETE_USER,\r\n//   payload: od,\r\n// });\r\n","export const ADD_USER = \"@items/add\";\r\nexport const DELETE_USER = \"@item/delete\";\r\nexport const EDIT_FILTER = \"@filter/edit\";\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./AddContact.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { userAdd } from \"../../redux/actions/itemsAction\";\r\n\r\nconst Phonebook = ({ setShowAlert }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const contacts = useSelector((state) => state.items);\r\n  const dispatch = useDispatch();\r\n\r\n  const inputName = ({ target }) => {\r\n    setName(target.value);\r\n  };\r\n  const inputNumber = ({ target }) => {\r\n    setNumber(target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.find((contact) => contact.name === name)) {\r\n      setShowAlert({ status: true, text: \"Contact already exist\" });\r\n      setTimeout(() => {\r\n        setShowAlert({ status: false, text: \"\" });\r\n      }, 2000);\r\n      return;\r\n    }\r\n    if (name.length < 2) {\r\n      setShowAlert({ status: true, text: \"Name mast content 2 characters\" });\r\n      setTimeout(() => {\r\n        setShowAlert({ status: false, text: \"\" });\r\n      }, 2000);\r\n      return;\r\n    }\r\n\r\n    dispatch(userAdd({ name, number, id: uuidv4() }));\r\n\r\n    localStorage.setItem(\r\n      \"localContacts\",\r\n      JSON.stringify([...contacts, { name, number, id: uuidv4() }])\r\n    );\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} autoComplete=\"off\" onSubmit={submitHandler}>\r\n      <input\r\n        className={styles.inputName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Full Name\"\r\n        value={name}\r\n        onChange={inputName}\r\n      ></input>\r\n      <input\r\n        className={styles.inputNumber}\r\n        type=\"text\"\r\n        name=\"number\"\r\n        placeholder=\"Nubmer xxx-xx-xx\"\r\n        value={number}\r\n        onChange={inputNumber}\r\n      ></input>\r\n      <button type=\"submit\" className={styles.buttonAddContacts}>\r\n        Add contacts?\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n\r\nPhonebook.propTypes = {\r\n  setShowAlert: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./OneContact.module.css\";\r\nimport { userDelete } from \"../../redux/actions/itemsAction\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst OneContact = ({ name, number, id }) => {\r\n  const dispatch = useDispatch();\r\n  const handleUserDelete = (id) => {\r\n    dispatch(userDelete(id));\r\n    const localArr = JSON.parse(localStorage.getItem(\"localContacts\"));\r\n    const newArr = localArr.filter((item) => item.id !== id);\r\n    localStorage.setItem(\"localContacts\", JSON.stringify(newArr));\r\n  };\r\n\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p className={styles.contactName}>{name}</p>\r\n      <p className={styles.contactNumber}>{number}</p>\r\n      <button\r\n        className={styles.deleteButton}\r\n        onClick={() => handleUserDelete(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default OneContact;\r\n\r\nOneContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport OneContact from \"../OneContact/OneContact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport \"./AllContacts.css\";\r\n\r\nconst AllContacts = () => {\r\n  const contacts = useSelector((state) => state.items);\r\n  const inputFilter = useSelector((state) => state.filter);\r\n\r\n  const filterContacts = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(inputFilter)\r\n  );\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {filterContacts.map(({ name, number, id }) => (\r\n        <CSSTransition key={id} timeout={250} classNames=\"listItem\">\r\n          <OneContact key={id} name={name} number={number} id={id} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default AllContacts;\r\n","import { EDIT_FILTER } from \"../constants/constants\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterEdit = createAction(EDIT_FILTER);\r\n\r\n// export const filterEdit = (value) => ({\r\n//   type: EDIT_FILTER,\r\n//   payload: value,\r\n// });\r\n","import React from \"react\";\r\nimport styles from \"./FilterConatcts.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { filterEdit } from \"../../redux/actions/filterAction\";\r\n\r\nconst FilterContacts = () => {\r\n  const dispatch = useDispatch();\r\n  const editFilter = ({ target }) => {\r\n    dispatch(filterEdit(target.value.toLowerCase()));\r\n  };\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <p className={styles.inputName}>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter name\"\r\n        onChange={editFilter}\r\n        className={styles.filter}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterContacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Alert.css\";\r\n\r\nconst Alert = ({ showAlert }) => {\r\n  return <div className=\"alert\">{showAlert}</div>;\r\n};\r\n\r\nexport default Alert;\r\n\r\nAlert.propTypes = {\r\n  showAlert: PropTypes.string.isRequired,\r\n};\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport AddContact from \"./components/AddContact/AddContact\";\r\nimport AllContacts from \"./components/AllContacts/AllContacts\";\r\nimport FilterContacts from \"./components/FilterContacts/FilterContacts\";\r\nimport Alert from \"./components/Alert/Alert\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { userAdd } from \"./redux/actions/itemsAction\";\r\n\r\nfunction App() {\r\n  const [showAlert, setShowAlert] = useState({ status: false, text: \"\" });\r\n\r\n  const contacts = useSelector((state) => state.items);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"localContacts\")) {\r\n      localStorage.setItem(\"localContacts\", JSON.stringify([]));\r\n    }\r\n    const users = JSON.parse(localStorage.getItem(\"localContacts\"));\r\n    users.map((user) => dispatch(userAdd(user)));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames=\"titlePhonebook\"\r\n      >\r\n        <h1 className=\"titlePhonebook\">Phonebook</h1>\r\n      </CSSTransition>\r\n\r\n      <AddContact setShowAlert={setShowAlert} />\r\n      {contacts.length >= 2 && <FilterContacts />}\r\n\r\n      {contacts.length > 0 && <AllContacts />}\r\n\r\n      <CSSTransition\r\n        in={showAlert.status}\r\n        timeout={250}\r\n        classNames=\"alert\"\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        <Alert showAlert={showAlert.text} />\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { userAdd, userDelete } from \"../actions/itemsAction\";\r\n\r\nexport default createReducer([], {\r\n  [userAdd]: (state, action) => [...state, action.payload],\r\n  [userDelete]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n});\r\n\r\n// import { ADD_USER, DELETE_USER } from \"../constants/constants\";\r\n// const initState = \"\";\r\n// export default (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case ADD_USER:\r\n//       return [...state, action.payload];\r\n//     case DELETE_USER:\r\n//       return state.filter((item) => item.id !== action.payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { filterEdit } from \"../actions/filterAction\";\r\n\r\nexport default createReducer(\"\", {\r\n  [filterEdit]: (state, action) => action.payload,\r\n});\r\n\r\n// import { EDIT_FILTER } from '../constants/constants';\r\n// const initState = \"\";\r\n// export default (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case EDIT_FILTER:\r\n//       return action.payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import { combineReducers } from \"redux\";\r\nimport items from \"./itemsReducers\";\r\nimport filter from \"./filterReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default rootReducer;\r\n","// import { createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// const store = createStore(rootReducer, composeWithDevTools);\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers/mainReducers\";\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}